# Copyright (c) 2013, Daynix Computing LTD (www.daynix.com)
# All rights reserved.
#
# Maintained by oss@daynix.com
#
# This file is a part of VirtHCK, please see the wiki page
# on https://github.com/daynix/VirtHCK/wiki for more.
#
# This code is licensed under standard 3-clause BSD license.
# See file LICENSE supplied with this package for the full license text.

#Settings file for HCK setup

#Setup ID
UNIQUE_ID=11  # 1 ... 9999

# Run QEMU process as root (note: VirtHCK should ALWAYS be started with root
# privileges. Setting this option to "false" will just make the process drop
# the root privileges once running, if started via sudo).
# "false" is recommended! The default is "true" for backward compatibility.
RUN_QEMU_AS_ROOT=true

#HCK root
HCK_ROOT=`dirname $0`

#QEMU PATH
QEMU_BIN=/usr/libexec/qemu-kvm
QEMU_IMG_BIN=qemu-img

#IVSHMEM SERVER PATH
IVSHMEM_SERVER_BIN=ivshmem-server

#Test device
#For each device there are three parameters as follows:
#Please note that setting video's TEST_DEV_NAME and TEST_DEV_EXTRA_PARAMS
#is not currently supported.
TEST_DEV_TYPE="network"      TEST_DEV_NAME="virtio-net-pci"      TEST_DEV_EXTRA_PARAMS=""
#TEST_DEV_TYPE="bootstorage"  TEST_DEV_NAME="virtio-blk-pci"      TEST_DEV_EXTRA_PARAMS=""
#TEST_DEV_TYPE="storage-blk"  TEST_DEV_NAME="virtio-blk-pci"      TEST_DEV_EXTRA_PARAMS=""
#TEST_DEV_TYPE="fs-filter"    TEST_DEV_NAME=""                    TEST_DEV_EXTRA_PARAMS=""
#TEST_DEV_TYPE="storage-scsi" TEST_DEV_NAME="virtio-scsi-pci"     TEST_DEV_EXTRA_PARAMS=""
#TEST_DEV_TYPE="rng"          TEST_DEV_NAME="virtio-rng-pci"      TEST_DEV_EXTRA_PARAMS=""
#TEST_DEV_TYPE="balloon"      TEST_DEV_NAME="virtio-balloon-pci"  TEST_DEV_EXTRA_PARAMS=""
#TEST_DEV_TYPE="pvpanic"      TEST_DEV_NAME="pvpanic"             TEST_DEV_EXTRA_PARAMS=""
#TEST_DEV_TYPE="vioinput"     TEST_DEV_NAME="virtio-keyboard-pci" TEST_DEV_EXTRA_PARAMS=""
#TEST_DEV_TYPE="serial"       TEST_DEV_NAME="virtio-serial-pci"   TEST_DEV_EXTRA_PARAMS=""
#TEST_DEV_TYPE="usb"          TEST_DEV_NAME="usb-storage"         TEST_DEV_EXTRA_PARAMS=""
#TEST_DEV_TYPE="usb3"         TEST_DEV_NAME="usb-storage"         TEST_DEV_EXTRA_PARAMS=""
#TEST_DEV_TYPE="ivshmem"      TEST_DEV_NAME="ivshmem-doorbell"    TEST_DEV_EXTRA_PARAMS=""
#TEST_DEV_TYPE="video"

#Test device: virtual or physical
#Set IS_PYHSICAL to true if the test device is physical.
#Please note that this feature currently supports network devices only.
#CLIENT_HOST_ADDRESS is the pci address of the physical card.
#ASSIGNMENT=[vfio-pci | pci-assign]
IS_PHYSICAL=false
ASSIGNMENT=vfio-pci
CLIENT1_HOST_ADDRESS=01:00.0
CLIENT2_HOST_ADDRESS=03:00.0

#Machine type
MACHINE_TYPE=pc
#MACHINE_TYPE=q35

#Boot options
BOOT_ORDER="order=cd,menu=on"

#VIDEO
VIDEO_TYPE=VNC
#VIDEO_TYPE=SPICE

#TEST NETWORK BACKEND
TEST_NET_TYPE=bridge
#TEST_NET_TYPE=OVS

TEST_NETWORK_INTERFACE=tap
#TEST_NETWORK_INTERFACE=macvtap

#World bridge name
WORLD_BR_NAME=br0

#IMAGES
# Disable UUIDs (useful for WLK of 2008/Vista for clients and DTM controller)
# DISABLE_UUIDS=true
IMAGES_DIR=`dirname ${HCK_ROOT}`/images
STUDIO_IMAGE=${IMAGES_DIR}/HCK_Studio_WS2008R2_SP1.qcow2
CLIENT1_IMAGE=${IMAGES_DIR}/HCK_Client1_WS2008R2_SP1.qcow2
CLIENT2_IMAGE=${IMAGES_DIR}/HCK_Client2_WS2008R2_SP1.qcow2

# Use sufficient QCOW2 L2 cache to cover the entire virtual size of the image.
# Setting this to "true" can increase the performance significantly.
# More details on this: https://git.qemu.org/?p=qemu.git;a=blob;f=docs/qcow2-cache.txt
USE_FULL_QCOW2_L2_CACHE=false

#CDROM options for clients
#CDROM_CLIENT="/non/existing/path/en_windows_server_2008_r2_with_sp1_x64_dvd_617601.iso"
CDROM_CLIENT1=$CDROM_CLIENT
CDROM_CLIENT2=$CDROM_CLIENT

#RESOURCES
CLIENT1_CPUS=4
CLIENT2_CPUS=4
CLIENT1_MEMORY=4G
CLIENT2_MEMORY=4G
WORLD_NET_DEVICE=e1000
CTRL_NET_DEVICE=e1000
FILE_TRANSFER_DEVICE=e1000

#USB device
#CLIENT1_USB_DEV="/non/existing/path/usb1.raw"
#CLIENT2_USB_DEV="/non/existing/path/usb2.raw"

#Options for setup installation
UNSAFE_CACHE=off         # Turn on ONLY for installation!
CLIENT_WORLD_ACCESS=off  # Turn on ONLY for activation purposes!

#MISC
VHOST_STATE=on
SNAPSHOT=off
ENLIGHTENMENTS_STATE=off
ENABLE_S3=on
ENABLE_S4=on
#BIOS may be required if S3/S4 supported
#BIOS_CLIENT="/non/existing/path/qemu/pc-bios/bios.bin"
BIOS_CLIENT1=$BIOS_CLIENT
BIOS_CLIENT2=$BIOS_CLIENT

#Set remote viewers (VNC) title postfix for setup VMs
TITLE_POSTFIX=`pwd`

#SMB share
SHARE_ON_HOST=${HCK_ROOT}/SMB_SHARE  # The default share on the host
#Modify the default samba share network address
SHARE_ON_HOST_NET='192.168.101'  # The =FIRST THREE= octets of the share IP

#Virtio-net multiqueueing
#CLIENT1_N_QUEUES=8
#CLIENT2_N_QUEUES=8

#Network backend multiqueueing (ignored when Virtio-net multiqueueing enabled)
CLIENT1_NETDEV_QUEUES=1
CLIENT2_NETDEV_QUEUES=1

#QEMU Tracing
#CLIENT1_TRACE_EVENTS=/non/existing/path/trace_events.list
#CLIENT2_TRACE_EVENTS=/non/existing/path/trace_events.list

#Log clients output to file
#Output will be stored in a separate file for each client for each run
#Name of specific file will be printed to the console before client respawn
#CLIENT1_LOG=on
#CLIENT2_LOG=on
LOGS_DIR=`dirname ${HCK_ROOT}`/logs

#EXTRA PARAMS
#STUDIO_EXTRA="-cdrom /non/existing/path/en_windows_server_2008_r2_with_sp1_x64_dvd_617601.iso"
#CLIENT1_EXTRA=""
#CLIENT2_EXTRA=""

# Run setup configuration
. ${HCK_ROOT}/hck_aux.sh
